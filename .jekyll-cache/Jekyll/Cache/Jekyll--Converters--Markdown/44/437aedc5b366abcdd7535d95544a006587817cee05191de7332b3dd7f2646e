I"ÑL<h1 id="rigged-election-50-pts"><span style="color:red">Rigged Election (50 pts)</span></h1>

<hr />

<h2 id="part-1--challenge-description">PART 1 : CHALLENGE DESCRIPTION</h2>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Come one, come all! We've opened up a brand new website that allows the Lapland people to vote the next big town hall project! Just upload your ideas on the platform and vote using your CPU power. We've made sure voting takes a great amount of effort, so there's no easy way to play the system.

If you are indeed able to vote more than 250 times, you will be congratulated as an active Lapland citizen and receive a prize worthy of this title.

Remote server: http://challs.xmas.htsp.ro:11001
Author: Milkdrop
Note: The ideas you post are public and logged, posting any X-MAS flags may disqualify your team
Note 2: You must send all 250 votes from the same PHP session, otherwise the server will not be able to send you the flag.
</code></pre></div></div>

<hr />

<h2 id="part-2--viewing-the-source">PART 2 : VIEWING THE SOURCE</h2>

<p>Opening the web application leads you to this page:</p>

<p><img src="./screenshots/3_rigged_election_feed.png" alt="Landing Page" /></p>

<p>The goal is to vote for an idea by pressing <strong style="color:orange">I agree</strong> or <strong style="color:orange">I disagree</strong> more than 250 times using the same session ID.</p>

<p>But how does the voting work?</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"idea special"</span><span class="nt">&gt;</span>
	<span class="nt">&lt;b</span> <span class="na">class=</span><span class="s">"name"</span><span class="nt">&gt;</span>jebidiah<span class="nt">&lt;/b&gt;</span> / 811 Points
	<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"vote"</span><span class="nt">&gt;</span>
						
		<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"agree"</span> <span class="na">onclick=</span><span class="s">"vote(19863, 1)"</span><span class="nt">&gt;</span>(I agree)<span class="nt">&lt;/div&gt;</span> / 
						
		<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"disagree"</span> <span class="na">onclick=</span><span class="s">"vote(19863, 0)"</span><span class="nt">&gt;</span>(I disagree)<span class="nt">&lt;/div&gt;</span>
	<span class="nt">&lt;/div&gt;</span>
	<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"ideaText"</span><span class="nt">&gt;</span>bakanaman<span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>

...omitted...

<span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"/index.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
</code></pre></div></div>

<p>Voting triggers a <strong><code class="highlighter-rouge">vote()</code></strong> function which uses the idea ID and a boolean value as parameters.</p>

<p>Looking at the included javascript file:</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">generateRandom</span> <span class="p">(</span><span class="nx">length</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nx">result</span> <span class="o">=</span> <span class="dl">''</span><span class="p">;</span>
    <span class="kd">var</span> <span class="nx">characters</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789</span><span class="dl">'</span><span class="p">;</span>
    <span class="kd">var</span> <span class="nx">charactersLength</span> <span class="o">=</span> <span class="nx">characters</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span>

    <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span>
        <span class="nx">result</span> <span class="o">+=</span> <span class="nx">characters</span><span class="p">.</span><span class="nx">charAt</span> <span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span> <span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">random</span> <span class="p">()</span> <span class="o">*</span> <span class="nx">charactersLength</span><span class="p">));</span>

        <span class="k">return</span> <span class="nx">result</span><span class="p">;</span>
<span class="p">}</span>

<span class="kd">function</span> <span class="nx">vote</span> <span class="p">(</span><span class="nx">id</span><span class="p">,</span> <span class="nx">upvote</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nx">xhttp</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">XMLHttpRequest</span> <span class="p">();</span>
    <span class="nx">xhttp</span><span class="p">.</span><span class="nx">open</span> <span class="p">(</span><span class="dl">"</span><span class="s2">GET</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">/vote.php?g=1</span><span class="dl">"</span><span class="p">,</span> <span class="kc">false</span><span class="p">);</span>
    <span class="nx">xhttp</span><span class="p">.</span><span class="nx">send</span> <span class="p">();</span>
    <span class="kd">var</span> <span class="nx">work</span> <span class="o">=</span> <span class="nx">xhttp</span><span class="p">.</span><span class="nx">responseText</span><span class="p">;</span>

    <span class="kd">var</span> <span class="nx">statusElement</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span> <span class="p">(</span><span class="dl">"</span><span class="s2">status</span><span class="dl">"</span><span class="p">);</span>
    <span class="nx">statusElement</span><span class="p">.</span><span class="nx">className</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">status</span><span class="dl">"</span><span class="p">;</span>
    <span class="nx">statusElement</span><span class="p">.</span><span class="nx">innerText</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">CPU Voting on Idea #</span><span class="dl">"</span> <span class="o">+</span> <span class="nx">id</span> <span class="o">+</span> <span class="dl">"</span><span class="s2"> ...</span><span class="dl">"</span><span class="p">;</span>

    <span class="kd">var</span> <span class="nx">found</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
    <span class="k">while</span> <span class="p">(</span><span class="o">!</span><span class="nx">found</span><span class="p">)</span> <span class="p">{</span>
	<span class="kd">var</span> <span class="nx">randomLength</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span> <span class="p">(</span><span class="mi">7</span> <span class="o">+</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">random</span> <span class="p">()</span> <span class="o">*</span> <span class="mi">18</span><span class="p">);</span>
	<span class="kd">var</span> <span class="nx">stringGen</span> <span class="o">=</span> <span class="nx">generateRandom</span> <span class="p">(</span><span class="nx">randomLength</span><span class="p">);</span>
	<span class="kd">var</span> <span class="nx">md5Gen</span> <span class="o">=</span> <span class="nx">md5</span> <span class="p">(</span><span class="dl">"</span><span class="s2">watch__bisqwit__</span><span class="dl">"</span> <span class="o">+</span> <span class="nx">stringGen</span><span class="p">);</span>

	<span class="k">if</span> <span class="p">(</span><span class="nx">md5Gen</span><span class="p">.</span><span class="nx">substring</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nx">work</span><span class="p">.</span><span class="nx">length</span><span class="p">).</span><span class="nx">localeCompare</span> <span class="p">(</span><span class="nx">work</span><span class="p">)</span> <span class="o">===</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
	    <span class="kd">var</span> <span class="nx">url</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">/vote.php?id=</span><span class="dl">"</span> <span class="o">+</span> <span class="nx">id</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">&amp;h=</span><span class="dl">"</span> <span class="o">+</span> <span class="nx">stringGen</span><span class="p">;</span>
	    <span class="k">if</span> <span class="p">(</span><span class="nx">upvote</span> <span class="o">===</span> <span class="mi">1</span><span class="p">)</span>
		<span class="nx">url</span> <span class="o">+=</span> <span class="dl">"</span><span class="s2">&amp;u=1</span><span class="dl">"</span><span class="p">;</span>

	    <span class="nx">xhttp</span><span class="p">.</span><span class="nx">open</span> <span class="p">(</span><span class="dl">"</span><span class="s2">GET</span><span class="dl">"</span><span class="p">,</span> <span class="nx">url</span><span class="p">,</span> <span class="kc">false</span><span class="p">);</span>
	    <span class="nx">xhttp</span><span class="p">.</span><span class="nx">send</span> <span class="p">();</span>
	    <span class="nx">found</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
	<span class="p">}</span>
    <span class="p">}</span>

    <span class="nx">location</span><span class="p">.</span><span class="nx">href</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">/</span><span class="dl">"</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="program-flow">PROGRAM FLOW</h3>

<ol>
  <li>A request to <strong><code class="highlighter-rouge">/vote.php?g=1</code></strong> is made to get <strong><code class="highlighter-rouge">work</code></strong> (a 6 character long hex string)</li>
  <li>A random string with characters from <strong><code class="highlighter-rouge">[a-zA-Z0-9]</code></strong> and with length 7-25 is generated.</li>
  <li>The randomly generated string id concatenated to the string <strong><code class="highlighter-rouge">watch__bisqwit__</code></strong></li>
  <li>The newly formed string is then hashed using MD5 and if its first 6 characters matches with <strong><code class="highlighter-rouge">work</code></strong>, the vote is counted.</li>
</ol>

<p>The value of <strong><code class="highlighter-rouge">work</code></strong> changes with each attempt to vote.</p>

<hr />

<h2 id="part-3--getting-the-flag">PART 3 : GETTING THE FLAG</h2>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">hashlib</span>
<span class="kn">import</span> <span class="nn">requests</span> <span class="k">as</span> <span class="n">r</span>

<span class="c1">#session = { "PHPSESSID": "s5jb4edoqsl1njt0jcnhkgtks1" }
</span><span class="n">session</span> <span class="o">=</span> <span class="p">{</span> <span class="s">"PHPSESSID"</span><span class="p">:</span> <span class="s">"d9lie5oloqadnfrjlvrnhdaouj"</span> <span class="p">}</span>

<span class="k">def</span> <span class="nf">get_work</span><span class="p">():</span>

    <span class="n">work</span> <span class="o">=</span> <span class="n">r</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">"http://challs.xmas.htsp.ro:11001/vote.php?g=1"</span><span class="p">,</span> <span class="n">cookies</span><span class="o">=</span><span class="n">session</span><span class="p">)</span>
    
    <span class="k">return</span> <span class="nb">str</span><span class="p">(</span><span class="n">work</span><span class="o">.</span><span class="n">text</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">generate_work</span><span class="p">(</span><span class="n">stringGen</span><span class="p">):</span>

    <span class="n">md5</span> <span class="o">=</span> <span class="n">hashlib</span><span class="o">.</span><span class="n">md5</span><span class="p">()</span>
    <span class="n">md5</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="nb">bytes</span><span class="p">(</span><span class="s">"watch__bisqwit__"</span> <span class="o">+</span> <span class="n">stringGen</span><span class="p">))</span>
    <span class="n">md5_hex</span> <span class="o">=</span> <span class="nb">str</span><span class="p">(</span><span class="n">md5</span><span class="o">.</span><span class="n">hexdigest</span><span class="p">())</span>

    <span class="k">return</span> <span class="n">md5_hex</span><span class="p">[:</span><span class="mi">6</span><span class="p">]</span>

<span class="k">def</span> <span class="nf">main</span><span class="p">():</span>

    <span class="n">characters</span> <span class="o">=</span> <span class="s">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'</span>
    <span class="n">length</span> <span class="o">=</span> <span class="mi">6</span>
    <span class="n">char_indices</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">length</span><span class="p">)]</span>

    <span class="n">vote_ctr</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">possible_works</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">()</span>
    <span class="k">while</span> <span class="n">vote_ctr</span> <span class="o">&lt;</span> <span class="mi">252</span><span class="p">:</span>

        <span class="n">work</span> <span class="o">=</span> <span class="n">get_work</span><span class="p">()</span>

        <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>

            <span class="n">stringGen</span> <span class="o">=</span> <span class="n">possible_works</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">work</span><span class="p">,</span> <span class="bp">False</span><span class="p">)</span>

            <span class="k">if</span> <span class="n">stringGen</span><span class="p">:</span>
                <span class="n">data</span> <span class="o">=</span> <span class="p">{</span> <span class="s">"id"</span><span class="p">:</span> <span class="mi">19863</span><span class="p">,</span> <span class="s">"h"</span><span class="p">:</span> <span class="n">stringGen</span><span class="p">,</span> <span class="s">"u"</span><span class="p">:</span> <span class="mi">1</span> <span class="p">}</span> 
                <span class="n">req</span> <span class="o">=</span> <span class="n">r</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">"http://challs.xmas.htsp.ro:11001/vote.php"</span><span class="p">,</span> <span class="n">params</span><span class="o">=</span><span class="n">data</span><span class="p">,</span> <span class="n">cookies</span><span class="o">=</span><span class="n">session</span><span class="p">)</span>
                <span class="n">vote_ctr</span> <span class="o">+=</span> <span class="mi">1</span>

                <span class="k">print</span><span class="p">(</span><span class="n">vote_ctr</span><span class="p">,</span> <span class="n">work</span><span class="p">,</span> <span class="n">possible_works</span><span class="p">[</span><span class="n">work</span><span class="p">])</span>
                <span class="k">print</span><span class="p">(</span><span class="n">req</span><span class="o">.</span><span class="n">text</span><span class="p">)</span>
                <span class="k">break</span>

            <span class="k">else</span><span class="p">:</span>
                <span class="n">stringGen</span> <span class="o">=</span> <span class="s">""</span><span class="o">.</span><span class="n">join</span><span class="p">([</span><span class="n">characters</span><span class="p">[</span><span class="n">x</span><span class="p">]</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">char_indices</span><span class="p">])</span>

                <span class="n">new_work</span> <span class="o">=</span> <span class="n">generate_work</span><span class="p">(</span><span class="n">stringGen</span><span class="p">)</span>

                <span class="k">if</span> <span class="n">possible_works</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">new_work</span><span class="p">,</span> <span class="bp">True</span><span class="p">):</span>
                    <span class="n">possible_works</span><span class="o">.</span><span class="n">setdefault</span><span class="p">(</span><span class="n">new_work</span><span class="p">,</span> <span class="n">stringGen</span><span class="p">)</span>

                <span class="n">char_indices</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">+=</span> <span class="mi">1</span>
                <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">length</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">):</span>
                    <span class="k">if</span> <span class="n">char_indices</span><span class="p">[</span><span class="n">x</span><span class="p">]</span> <span class="o">==</span> <span class="nb">len</span><span class="p">(</span><span class="n">characters</span><span class="p">):</span> 
                        <span class="n">char_indices</span><span class="p">[</span><span class="n">x</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span>
                        <span class="n">char_indices</span><span class="p">[</span><span class="n">x</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">+=</span> <span class="mi">1</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">'__main__'</span><span class="p">:</span> <span class="n">main</span><span class="p">()</span>
</code></pre></div></div>

<p>My solution initializes an empty dictionary which is serve as a lookup table for found â<strong><code class="highlighter-rouge">work</code></strong>â values; otherwise, the program will add unique â<strong><code class="highlighter-rouge">work</code></strong>â values to the dictionary until the required value is found.</p>
:ET