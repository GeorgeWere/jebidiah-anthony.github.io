<!DOCTYPE html>
<html lang="en-US">
  <head>
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="/assets/css/style.css?v=">
    
    
    <meta property="article:tag" content="elastalert" />
    
    <meta property="article:tag" content="elasticsearch" />
    
    <meta property="article:tag" content="rule" />
    
    <meta property="article:tag" content="rules" />
    
    <meta property="article:tag" content="test" />
    
    <meta property="article:tag" content="aggregation" />
        

    <meta name="twitter:card" content="summary"/>
    <meta name="twitter:title" content="elastalerter.py">
    <meta name="twitter:description" content="An elastalert rule tester using python.">
    <meta name="twitter:site" content="@jebidiah-anthony" />
    <meta name="twitter:creator" content="@feeeellliix">

    
    <meta property="og:image" content="http://localhost:4000/banner.jpg" />
    

    
    <meta property="og:title" content="elastalerter.py" />
    

    <!-- Begin Jekyll SEO tag v2.6.1 -->
<title>elastalerter.py | jebidiah-anthony</title>
<meta name="generator" content="Jekyll v4.0.0" />
<meta property="og:title" content="elastalerter.py" />
<meta property="og:locale" content="en_US" />
<meta name="description" content="An elastalert rule tester using python." />
<meta property="og:description" content="An elastalert rule tester using python." />
<link rel="canonical" href="http://localhost:4000/prjct/elastalerter_md" />
<meta property="og:url" content="http://localhost:4000/prjct/elastalerter_md" />
<meta property="og:site_name" content="jebidiah-anthony" />
<script type="application/ld+json">
{"@type":"WebPage","url":"http://localhost:4000/prjct/elastalerter_md","description":"An elastalert rule tester using python.","headline":"elastalerter.py","@context":"https://schema.org"}</script>
<!-- End Jekyll SEO tag -->


    <style>
      header { margin-bottom: 0px; }
      .header .navbtn {
	position: fixed;
	width: 0px;
	visibility: hidden;
      }
      .header .title { 
	padding-left: 69px;
	vertical-align: middle;
      }
      .header .title h2 { margin: 0; } 

      .container {
	max-width: 1200px;
      }
      .sidebar {
        border-right: 1px dashed #b5e853;
	bottom: 0;
        height: 100%;
	overflow: auto;
	padding: 10px 10px 10px 10px;
        position: fixed;
	top: 0;
        width: 230px;
      }
      .openbtn { 
	color:#b5e853;
	font-size:30px;
	cursor:pointer
      }
      .closebtn {
	color:#b5e853;
	font-size:69px;
	cursor:pointer;
	position:absolute;
	top:0;
	right:25px;
	font-size:36px;
	margin-left:50px;
	visibility:hidden;
      }
      
      .ctf_content {
        margin-left: 250px;
	padding-bottom: 5px;
      }
      .ctf_content h2 {	padding: 20px 0px 0px 10px; }
      .ctf_content h3 { margin: 20px 0px 0px 10px; }
      .ctf_content img {
 	display: block;
	margin-left: auto;
	margin-right: auto;
	max-width: 100%;
	padding: 0 10px 0 0;
      }
      .ctf_content table { padding: 0 15px; }

      #main_content h1 { padding: 20px 0px 0px 8px; }
      #main_content h2, p, pre { 
	padding-right:10px;
	padding-left:15px; 
      }
      #main_content h4 { 
        margin: 20px 0px 10px 0px; 
        padding-left: 25px; 
      }
      #main_content ol, ul { margin: 0 0 0 10px; }

      .highlighter-rouge { padding: 0 10px 0 10px; }

      .section-divider{
        border-bottom: 1.5px solid #b5e853;
        padding-top:28px;
        width:55%;
      }
      
      @media screen and (min-width: 801px) {
	.ctf_content {
          margin-left: 250px;
	  padding-bottom: 5px;
        }
      }
      @media screen and (max-width: 800px) {
        header {
	  background-color: #202020;
	  height: 80px;
	  padding: 0px 0 0 0;
	  position: fixed;
	  top: 0;
	}
        .header .navbtn {
          height: 80px;
	  padding: 18px 0 0 20px;
          visibility: visible;
	  width: 100px;
        }
	.header .title { padding-left: 100px; }
	.header .title h1 { padding-top: 5px; }
        .header .title h2 { margin: 0; }

	.container {
	  width:100%;
	}
	.sidebar {
          width: 0;
          z-index: 1;
          overflow-x: hidden;
	  padding: 0;
          transition: 0.5s;
	}
	.sidebar h2 { 
	  font-size: 18px; 
	  padding: 10px 10px 5px 10px;
	}
	.sidebar div { 
	  font-size: 15px; 
	  padding: 5px 10px 5px 10px;
	}
	.closebtn { visibility:visible; }

	.highlighter-rouge { padding: 0 0 0 0; }

	.ctf_content {
	  margin: 0;
	}
	.ctf_content h2 { padding: 15px 0px 0px 5px; }
        .ctf_content h3 { margin: 15px 10px 0px 15px; }
        .ctf_content img {
	  max-width: 100%;
	  padding: 0 10px 0 0;
        }
	.ctf_content table { 
	  margin: 0 10px 0px -8px;
	  min-width: 800px;
	}

        #main_content { margin-top:80px; }
	#main_content code { font-size: 15px; }
	#main_content h1 { font-size: 25px; }
	#main_content h2 { font-size: 22px; }
	#main_content h3 { font-size: 18px; }
	#main_content h4 { padding-left: 20px; }
	#main_content ol, ul {
	  font-size: 14px;
	  margin: 0 0 0 12px;
	  padding: 0 0 0 25px;
	}
	#main_content table { font-size: 14px; }
      }

      @media screen and (max-width: 480px) {
        header {
	  background-color: #202020;
	  height: 70px;
	  padding: 0px 0 0 0;
	  position: fixed;
	  top: 0;
	}
        .header .navbtn {
          height: 70px;
	  padding: 14px 0 0 18px;
        }
	.header .title { padding-left: 100px; }
	.header .title h1 { font-size:22px; }
        .header .title h2 { font-size:16px; }

	#main_content code { font-size: 13px; }
        #main_content ol, ul {
	  font-size: 13px;
	  margin: 0 0 0 12px;
	  padding: 0 0 0 25px;
	}
	#main_content table { font-size: 13px; }
      }
    </style>

  </head>

  <body>
    <div class="container">
       <div id="sidebar" class="sidebar">
         <span class="closebtn" onclick="closeNav()">&times;</span>      
	 <div><h2 style="margin-bottom:0; padding-top:20px">[SITE PAGES]</h2>

<div style="padding-top:10px">
  
  > <a href="/">whoami</a>
  
</div>
<div style="padding-top:10px">  
  >  <a href="/htb.html">
    
    htb writeups
    
  </a>
</div>
<div style="padding-top:10px">
  > <a href="/ctf.html">
    
    ctf writeups
    
  </a>
</div>
<div style="padding-top:10px">
  > <a href="/projects.html">
    
    <strong style="color:orange">projects</strong>
    
  </a>
</div>
</div>
	 <div style="padding-bottom:20px">
           
             <h2 style="margin-bottom:0; padding-top: 20px">[PROJECTS]</h2>


<div style="padding-top:10px">
  
  > <a href="http://localhost:4000/prjct/CORS.html">CORS</a>
  
</div>

<div style="padding-top:10px">
  
  > <strong style="color:orange">elastalerter.py</strong>
  
</div>

<div style="padding-top:10px">
  
  > <a href="http://localhost:4000/prjct/Windows-Event-Collector.html">Event Forwarder</a>
  
</div>

<div style="padding-top:10px">
  
  > <a href="http://localhost:4000/prjct/Custom-evtx-Logfiles.html">Custom .evtx Files</a>
  
</div>

<div style="padding-top:10px">
  
  > <a href="http://localhost:4000/prjct/PTT-PSRemoting.html">Double Hop Bypass</a>
  
</div>



	   
	 </div>
       </div>
       <div id="content" class="ctf_content">
	 <header>
           <div class="header">
             <div class="navbtn">
               <span class="openbtn" onclick="openNav()">&#9776;</span>
	     </div>
	     <div class="title">
               <h1>jebidiah-anthony</h1>
               <h2 style="padding:0 0 0 0">write-ups and what not</h2>
	     </div>
           </div>
         </header>
         <section id="main_content"># <span style="color:red">./elastalerter.py</span>

---

## ENVIRONMENT

<table>
<tr>
	<td><strong>ELASTICSEARCH</strong></td>
	<td><a href="https://www.elastic.co/downloads/past-releases/elasticsearch-7-4-0">v7.4.0</a></td>
</tr>
<tr>
	<td><strong>VIRTUAL ENVIRONMENT</strong></td>
	<td>Python 3.6</td>
</tr>
<tr>
	<td><strong>OPERATING SYSTEM</strong></td>
	<td>Linux (in this case: Ubuntu 18.04)</td>
</tr>
</table>

---

## IMPORTANT NOTES

- This probably <span style="color:red">__won't work__</span> on Windows Machines.
- The program manually creates a basic config file if none is specified.
- The program manually sets the rule's alert to __`elastalerter.alerter.Alert`__.
- If mappings are not specified during aggregation, key fields are __automatically set as keyword fields__:
  ```yaml
  query_key: field_name.keyword
  metric_agg_key: field_name.keyword
  ```
- Logs to be used in a specific test could be a list of files or a directory containing all logs to be indexed.
  ```json
  "log": ["log1.json", "log2.json", ...]
  
   or

  "log": "/dir"
  ```
- If a directory is specified, the program will check if it exists as is, in the directory specified in __`--logs`__, or in the current working directory.
- Test results are laid out as follows in __`results.json`__:
  ```json
  {
      "total": 6,
      "pass": 3,
      "fail": 3,
      "tests": {
          "test_2": {
              "result": "PASSED",
              "message": []
          },
          "test_2": {
              "result": "PASSED",
              "message": []
          },
          "test_3": {
              "result": "FAILED",
              "message": [
                  "1 LOG(S) MATCHED: log001.json"
              ]
          },
          "test_4": {
              "result": "FAILED",
              "message": [
                  "7 LOG(S) DID NOT MATCH: agg_log001.json, agg_log002.json, agg_log003.json, agg_log004.json, agg_log005.json, log001.json, log003.json"
              ]
          },
          "test_agg_1": {
              "result": "FAILED",
              "message": [
                  "HITS (5) EXCEEDED THE THRESHOLD"
              ]
          }
      }
  }
  ```

---

## SET-UP

1. Download and run [elasticsearch 7.4.0](https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.4.0-linux-x86_64.tar.gz) for Linux.

   ```shell
   $ tar xvf elasticsearch-7.4.0-linux-x86_64.tar.gz

     ...

   $ elasticsearch-7.4.0/bin/elasticsearch

     ...

   ```

2. Set-up a python virtual environment:

   ```shell
   $ pip3 install virtualenv

   $ python3 -m virtualenv v_env

     Using base prefix '/usr'
     New python executable in CURRENT_WORKING_DIRECTORY/v_env/bin/python3
     Also creating executable in CURRENT_WORKING_DIRECTORY/v_env/bin/python
     Installing setuptools, pip, wheel...
     done.

   $ source v_env/bin/activate

   (v_env) $
   ```

3. Download and install dependencies for __*elastalerter.py*__

   ### download and unzip the files
   ```shell
   (v_env) $ wget https://github.com/jebidiah-anthony/elastalerter/blob/master/elastalerter.zip?raw=true
   
     ...omitted...
     HTTP request sent, awaiting response... 200 OK
     Length: 4248 (4.1K) [application/zip]
     Saving to: ‘elastalerter.zip’

     elastalerter.zip         100%[================================>]   4.15K  --.-KB/s    in 0s
     ...omitted...
   
   (v_env) $ unzip elastalerter.py 
   
     Archive:  elastalerter.zip
       inflating: elastalerter.py
       inflating: requirements.txt
       inflating: setup.py 

   ```

   ### install dependencies
   ```shell
   (v_env) $ pip install --requirement requirements.txt
   
     ...omitted...
     Installing collected packages: pytz, tzlocal, six, APScheduler, urllib3, idna, certifi, chardet, requests, 
     aws-requests-auth, blist, docutils, jmespath, python-dateutil, botocore, s3transfer, boto3, pycparser, cffi, 
     configparser, croniter, defusedxml, docopt, jsonschema, mock, PyStaticConfiguration, stomp.py, exotel, 
     envparse, python-magic, pbr, oauthlib, requests-oauthlib, requests-toolbelt, jira, PyYAML, PySocks, PyJWT, 
     twilio, texttable, elasticsearch, future, thehive4py, elastalert, tabulate
     ...omitted...

   ```

   ### install the alerter
   ```shell
   (v_env) $ pip install .
   
     ...omitted...
     Successfully built elastalerter
     Installing collected packages: elastalerter
     Successfully installed elastalerter-0.0.2

   ```

---

## EXECUTION (w/ sample output)

### help (__`-h, --help`__)
```shell
(v_env) $ python elastalerter.py -h
```
```
usage: python ./elastalerter.py --logs LOGS_DIR --rules RULES_DIR --expected expected.json

    SAMPLE "expected.json"
    ------------------------------------------------
    {
        "test_1": {
            "rule": "rule.yaml",
            "log": ["log1.json", "log2.json", ...],
            "match": (true | false),
            "enabled": (true | false)
        },
        "test_2": {
            ...
            "log": "/dir"
            ...
        },
        ...
    }

optional arguments:
  -h, --help       show this help message and exit
  --host HOST      elasticsearch instance host address (default: 127.0.0.1)
  --port PORT      elasticsearch instance port (default: 9200)
  --config YAML    elastalert config file to use.
  --mappings JSON  field data type mappings.
  --verbose        output other details

required arguments:
  --expected JSON  JSON outline of test names and expected results
  --logs DIR       directory of the logs to be indexed
  --rules DIR      directory of the rules to run with elastalert
```

### default output
```shell
(v_env) $ python elastalerter.py --logs ./logs --rules ./rules --expected expected.json
```
```
[+] RUNNING test_1 :
    [+] TESTING RULE -- RULE01 ( ./rule01.yaml )
    [+] TEST ( test_1 ) PASSED

[+] RUNNING test_2 :
    [+] TESTING RULE -- RULE02 ( ./rule02.yaml )
    [+] TEST ( test_2 ) PASSED

[+] RUNNING test_3 :
    [+] TESTING RULE -- RULE01 ( ./rule01.yaml )
    [+] TEST ( test_3 ) FAILED

[+] RUNNING test_4 :
    [+] SPECIFIED LOGS IS A DIRECTORY ( ./logs )
        [ERROR] "test_file" IS NOT A VALID JSON FILE.
        [ERROR] "test_file.json" IS NOT A VALID LOG FILE.
    [+] TESTING RULE -- RULE02 ( ./rule02.yaml )
    [+] TEST ( test_4 ) FAILED

[+] RUNNING test_agg_1 :
    [+] TESTING RULE -- AGG_RULE01 ( ./agg_rule01.yaml )
    [+] TEST ( test_agg_1 ) FAILED

[+] RUNNING test_agg_02 :
    [+] TEST ( test_agg_2 ) WAS DISABLED


[+] RESULTS WERE OUTPUT TO CURRENT_WORKING_DIRECTORY/results.json

    ╒════════════╤══════════╤═════════════════════════════════════════════════════════════╕
    │ TestID     │ RESULT   │ MESSAGE                                                     │
    ╞════════════╪══════════╪═════════════════════════════════════════════════════════════╡
    │ test_1     │ PASSED   │                                                             │
    ├────────────┼──────────┼─────────────────────────────────────────────────────────────┤
    │ test_2     │ PASSED   │                                                             │
    ├────────────┼──────────┼─────────────────────────────────────────────────────────────┤
    │ test_3     │ FAILED   │ > 1 LOG(S) MATCHED: log001.json                             │
    ├────────────┼──────────┼─────────────────────────────────────────────────────────────┤
    │ test_4     │ FAILED   │ > 7 LOG(S) DID NOT MATCH: agg_log001.json, agg_log002.json, │
    │            │          │   agg_log003.json, agg_log004.json, agg_log005.json,        │
    │            │          │   log001.json, log003.json                                  │
    ├────────────┼──────────┼─────────────────────────────────────────────────────────────┤
    │ test_agg_1 │ FAILED   │ > HITS (5) EXCEEDED THE THRESHOLD                           │
    ╘════════════╧══════════╧═════════════════════════════════════════════════════════════╛
```

### mappings (__`--mappings`__)

#### > sample mappings.json
```json
{
    "mappings": {
        "properties": {
            "ip": { "type": "ip" },
            "port": { "type": "integer" }
        }
    }
}
```

#### > execution
```shell
(v_env) $ python elastalerter.py --logs ./logs --rules ./rules --expected expected.json --mappings mappings.json
```
```
[+] RUNNING test_1 :
    [+] TESTING RULE -- RULE01 ( ./rule01.yaml )
    [+] TEST ( test_1 ) PASSED

[+] RUNNING test_2 :
    [+] TESTING RULE -- RULE02 ( ./rule02.yaml )
    [+] TEST ( test_2 ) PASSED

[+] RUNNING test_3 :
    [+] TESTING RULE -- RULE01 ( ./rule01.yaml )
    [+] TEST ( test_3 ) FAILED

[+] RUNNING test_4 :
    [+] SPECIFIED LOGS IS A DIRECTORY ( ./logs )
        [ERROR] "test_file" IS NOT A VALID JSON FILE.
        [ERROR] "test_file.json" IS NOT A VALID LOG FILE.
    [+] TESTING RULE -- RULE02 ( ./rule02.yaml )
    [+] TEST ( test_4 ) FAILED

[+] RUNNING test_agg_1 :
    [+] TESTING RULE -- AGG_RULE01 ( ./agg_rule01.yaml )
    [+] TEST ( test_agg_1 ) FAILED

[+] RUNNING test_agg_02 :
    [+] TEST ( test_agg_2 ) WAS DISABLED


[+] RESULTS WERE OUTPUT TO CURRENT_WORKING_DIRECTORY/results.json

    ╒════════════╤══════════╤═════════════════════════════════════════════════════════════╕
    │ TestID     │ RESULT   │ MESSAGE                                                     │
    ╞════════════╪══════════╪═════════════════════════════════════════════════════════════╡
    │ test_1     │ PASSED   │                                                             │
    ├────────────┼──────────┼─────────────────────────────────────────────────────────────┤
    │ test_2     │ PASSED   │                                                             │
    ├────────────┼──────────┼─────────────────────────────────────────────────────────────┤
    │ test_3     │ FAILED   │ > 1 LOG(S) MATCHED: log001.json                             │
    ├────────────┼──────────┼─────────────────────────────────────────────────────────────┤
    │ test_4     │ FAILED   │ > 7 LOG(S) DID NOT MATCH: agg_log001.json, agg_log002.json, │
    │            │          │   agg_log003.json, agg_log004.json, agg_log005.json,        │
    │            │          │   log001.json, log003.json                                  │
    ├────────────┼──────────┼─────────────────────────────────────────────────────────────┤
    │ test_agg_1 │ FAILED   │ > HITS (5) EXCEEDED THE THRESHOLD                           │
    ╘════════════╧══════════╧═════════════════════════════════════════════════════════════╛
```

### verbose (__`--verbose`__)
```shell
(v_env) $ python elastalerter.py --logs ./logs --rules ./rules --expected ./expected.json --verbose
```
```
[+] RUNNING test_1 :
    [+] A NEW INDEX ( test_1 ) WAS CREATED
    [+] TIMESTAMP RANGE -- [2019-09-16T15:59:57 - 2019-09-16T15:59:57]
    [+] TESTING RULE -- RULE01 ( ./rule01.yaml )
    [+] UPDATING RESULTS...
    [+] DELETING TEST INDEX...
    [+] TEST ( test_1 ) PASSED

[+] RUNNING test_2 :
    [+] A NEW INDEX ( test_2 ) WAS CREATED
    [+] TIMESTAMP RANGE -- [2019-09-16T15:59:57 - 2019-09-16T15:59:57]
    [+] TESTING RULE -- RULE02 ( ./rule02.yaml )
    [+] UPDATING RESULTS...
    [+] DELETING TEST INDEX...
    [+] TEST ( test_2 ) PASSED

[+] RUNNING test_3 :
    [+] A NEW INDEX ( test_3 ) WAS CREATED
    [+] TIMESTAMP RANGE -- [2019-09-16T15:59:57 - 2019-09-16T15:59:57]
    [+] TESTING RULE -- RULE01 ( ./rule01.yaml )
    [+] UPDATING RESULTS...
    [+] DELETING TEST INDEX...
    [+] TEST ( test_3 ) FAILED

[+] RUNNING test_4 :
    [+] A NEW INDEX ( test_4 ) WAS CREATED
    [+] SPECIFIED LOGS IS A DIRECTORY ( ./logs )
        [ERROR] "test_file" IS NOT A VALID JSON FILE.
        [ERROR] "test_file.json" IS NOT A VALID LOG FILE.
    [+] TIMESTAMP RANGE -- [2019-09-16T15:59:57 - 2019-09-16T15:59:57]
    [+] TESTING RULE -- RULE02 ( ./rule02.yaml )
    [+] UPDATING RESULTS...
    [+] DELETING TEST INDEX...
    [+] TEST ( test_4 ) FAILED

[+] RUNNING test_agg_1 :
    [+] A NEW INDEX ( test_agg_1 ) WAS CREATED
    [+] TIMESTAMP RANGE -- [2019-09-16T15:59:57 - 2019-09-16T15:59:57]
    [+] TESTING RULE -- AGG_RULE01 ( ./agg_rule01.yaml )
    [+] UPDATING RESULTS...
    [+] DELETING TEST INDEX...
    [+] TEST ( test_agg_1 ) FAILED

[+] RUNNING test_agg_02 :
    [+] TEST ( test_agg_2 ) WAS DISABLED


[+] RESULTS WERE OUTPUT TO CURRENT_WORKING_DIRECTORY/results.json

    ╒════════════╤══════════╤═════════════════════════════════════════════════════════════╕
    │ TestID     │ RESULT   │ MESSAGE                                                     │
    ╞════════════╪══════════╪═════════════════════════════════════════════════════════════╡
    │ test_1     │ PASSED   │                                                             │
    ├────────────┼──────────┼─────────────────────────────────────────────────────────────┤
    │ test_2     │ PASSED   │                                                             │
    ├────────────┼──────────┼─────────────────────────────────────────────────────────────┤
    │ test_3     │ FAILED   │ > 1 LOG(S) MATCHED: log001.json                             │
    ├────────────┼──────────┼─────────────────────────────────────────────────────────────┤
    │ test_4     │ FAILED   │ > 7 LOG(S) DID NOT MATCH: agg_log001.json, agg_log002.json, │
    │            │          │   agg_log003.json, agg_log004.json, agg_log005.json,        │
    │            │          │   log001.json, log003.json                                  │
    ├────────────┼──────────┼─────────────────────────────────────────────────────────────┤
    │ test_agg_1 │ FAILED   │ > HITS (5) EXCEEDED THE THRESHOLD                           │
    ╘════════════╧══════════╧═════════════════════════════════════════════════════════════╛
```
</section>
       </div>
    </div>

    <script>
      function openNav() {
        document.getElementById("sidebar").style.width = "250px";
        document.getElementById("content").style.marginLeft = "250px";
      }
      function closeNav() {
        document.getElementById("sidebar").removeAttribute("style");
        document.getElementById("content").removeAttribute("style");
      } 
    </script>

    
      <script>
        (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
        m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
        })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
        ga('create', 'true', 'auto');
        ga('send', 'pageview');
      </script>
    
  </body>
</html>
